@page "/login"
@inject NavigationManager NavigationManager;
@inject LoginService LoginService;

<div class="row">
    <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
        <EditForm Model="@Model" OnValidSubmit="Authenticate" FormName="LoginForm">
            <DataAnnotationsValidator />
            <div class="mb-3 text-center flex-column">
                <img src="/Resources/Images/user-icon.svg" style="max-height:5rem;" class="mb-3" />
                <h3>LOGIN</h3>
            </div>
            <div class="mb-3">
                <label>Email</label>
                <InputText @bind-Value="Model.Email" class="form-control" type="email" placeholder="Email" autocomplete="email" />
                <ValidationMessage For="@(() => Model.Email)" />
            </div>
            <div class="mb-3">
                <label>Password</label>
                <InputText @bind-Value="Model.Password" class="form-control" type="password" placeholder="Password" autocomplete="current-password" />
                <ValidationMessage For="@(() => Model.Password)" />
            </div>
            <div class="mb-3 text-center">
                <span class="text-danger">@ErrorMessage</span>
            </div>
            <div class="mb-3 d-grid gap-2">
                <button type="submit" class="btn btn-primary">Login</button>
            </div>
            <div class="mb-3 text-center">
                <a href="/signup">Don't have an account? Sign up here</a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    public LoginViewModel Model { get; set; } = new LoginViewModel();
    private string? ErrorMessage;

    private async Task Authenticate()
    {
        ErrorMessage = await LoginService.AuthenticateAsync(Model.Email, Model.Password);
        if (ErrorMessage == null)
        {
            NavigationManager.NavigateTo("/");
        }
    }
}
