@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@using System.Security.Claims

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">        
        <AuthorizeView>
            <NotAuthorized>
                <a href="login">Login</a>
                <img src="/Resources/Images/login-icon.svg" style="max-height:1rem;" />
            </NotAuthorized>
            <Authorized>
                <div style="display: flex; width:100%; justify-content: space-between; align-items: center;">
                    <div>
                        <h3>Hello @FirstName @LastName</h3>
                    </div>
                    <div>
                        <a href="logout">Logout</a>
                        <img src="/Resources/Images/logout-icon.svg" style="max-height:1rem;"/>
                    </div>
                </div>
            </Authorized>
        </AuthorizeView>
        </div>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private string? FirstName, LastName;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            var givenName = user.FindFirst(c => c.Type == ClaimTypes.GivenName)?.Value;
            var surname = user.FindFirst(c => c.Type == ClaimTypes.Surname)?.Value;
            FirstName = givenName;
            LastName = surname;
        }
    }
}